1.C#의 데이터형 obecj로 부터 파생된 객체

System.Object ==object

c인 경우 
int -> 메모리와 직결
4byte 메모리 공간 확보
             저장할수 있는 공간 제공

데이터 형은 CTS(공용 형식 사양)에서 정의된 객체

-정수형 
bool : System.BOOlean, 1byte
->true와 false값을 가짐  
char: System.Char , 2byte 
->c#에서 바뀐점. 유니코드(모든 나라의 언어를 표현하기 위함)
byte: System.Byte , 1byte
sbyte:System.SByte,1 byte
short:System.Int16 , 2 byte
ushort:System.UInt16, 2byte
int:System.Int32, 4byte
uint:System.UInt32, 4byte
long: System.System.64, 8byte
ulong: System.UInt.64, 8byte

-실수형
float :System.Single , 4byte
double: System.Double, 8byte
decimal: System.Decimal, 16byte

문자열 ->기본 자료형으로 되어 있어 많이 편리해짐
string: System.String

bool형
true,false만 저장 가능
그외에 숫자는 사용 금지

char형 

유니코드
2 byte
char형의 암시적 값 변환
ushort, int,uint,long,ulong,float,double,decimal
int Number='7';

string형

c/c++문자열과 차이점
문자열 끝에 0,'\0'->NULL문자가 포함

'+':문자열 연결
==:문자열 비교
[인덱스]:문자

문자열에 '\'를 포함하는 경우
@"c:\temp\test.txt"-> @를 쓸경우 일반적인 경우 많이 쓰임
"c:\\temp\\test.txt"-> @를 안쓸 경우




